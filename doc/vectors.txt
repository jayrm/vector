	vector - geometric vector library
	Copyright (C) 2018 Jeffery R. Marshall (coder[at]execulink[dot]com)

vectors library 
===============

	A general purpose geometric vector library.  Started around
	2006, and uses (at the time) overloaded operators to create
	a data type that can be used in expressions.

	vector2 - 2D vector data type
	vector3 - 3D vector data type
	line2   - 2D line data type

	Also has some other support functions and constants

	Worst thing I ever done was to copy and paste this library
	code where it was needed.  The result was dozens of copies
	of the same source that were all slightly mutated.  One of
	the purposes of this library is to consolidate my many
	versions.


Files
-----

	See:
		doc/math_angle.txt
		doc/vectors.txt
		doc/vectors_vector2.txt
		doc/vectors_vector3.txt
		doc/vectors_line2.txt
		src/angle.bas
		src/vector2.bas
		src/vector3.bas
		src/line2.bas
		inc/angle.bi
		inc/vectypes.bi
		inc/vector2.bi
		inc/vector3.bi
		inc/line2.bi
		tests/math_angles.bas
		tests/vectors_vectypes.bas
		tests/vectors_vector2.bas
		tests/vectors_vector3.bas
		tests/vectors_line2.bas


Notation
--------

	The following will be used:

	(x, y)     2D vector with scalar components x & y
	(x, y, z)  3D vector with scalar components x, y, z
	{a}        vector 'a', what would normally be written in bold
	           or with a arrow line above
	a.x        x component of {a}, a subscript x
	a.y        y component of {a}, a subscript y
	a.z        z component of {a}, a subscript z


Vectors API
===========

	2D vectors - see vectors_vector2.txt
	3D vectors - see vectors_vector3.txt


vectors namespace
-----------------
	All vectors library functions and types exist in the
	vectors namespace


version
-------

	#define VECTORS_VERSION_MAJOR 0
	#define VECTORS_VERSION_MINOR 4


type REAL
---------
	
	The "real" type resolves to single float if not already defined.

	
	#ifndef (real)
		type real as single
	#endif

	See vectypes.bi


NULL
----

	If not defined, will be defined

	#define NULL 0

	See vectypes.bi


FALSE, TRUE
-----------

	The False and True values.  Will be defined if not already
	defined by the compiler.  Usage predates the inclusion of
	True, and False, intrinsic boolean definitions.

	See vectypes.bi


Boolean, BOOL
-------------

	If Boolean not defined, will be defined to unsigned 
	integer type

	#ifndef (boolean)
		type boolean as unisigned integer
	#endif
	
	If BOOL not defined will be defined to boolean type

	#ifndef (BOOL)
		type BOOL as boolean
	#endif

	See vectypes.bi


