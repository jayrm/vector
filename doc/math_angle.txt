	vector - geometric vector library
	Copyright (C) 2018 Jeffery R. Marshall (coder[at]execulink[dot]com)

angles
======

	Functions for working with angles

		radians  = Deg2Rad( degrees )
		gradians = Deg2Grad( degrees )
		turns    = Deg2Turn( degrees )
		degrees  = Rad2Deg( radians )
		gradians = Rad2Grad( radians )
		turns    = Rad2Turn( radians )
		degrees  = Grad2Deg( gradians )
		radians  = Grad2Grad( gradians )
		turns    = Grad2Turn( gradians )
		degrees  = Turn2Deg( turns )
		radians  = Turn2Rad( turns )
		gradians = Turn2Grad( turns )

		angle = FixAngle180( angle )
		angle = FixAngle360( angle )
		angle = FixAnglePI( angle )
		angle = FixAnglePI2( angle )


Files
-----

	See:
		doc/math_angle.txt
		src/angle.bas
		inc/angle.bi
		tests/math_angle.bas


namespace Angles
----------------

	Angle related functions and constants are in declared and
	defined in namespace angle.


Angle Types
-----------

	Type aliases give function declarations clear readability:

		type degrees as real
		type radians as real
		type gradians as real
		type turns as real


Angle Conversion
----------------

	Convert angle from one angular unit to another

	1 turn = 360 degress = 2 * PI radians = 400 gradians

	radians  = Deg2Rad( degrees )
	gradians = Deg2Grad( degrees )
	turns    = Deg2Turn( degrees )

	degrees  = Rad2Deg( radians )
	gradians = Rad2Grad( radians )
	turns    = Rad2Turn( radians )

	degrees  = Grad2Deg( gradians )
	radians  = Grad2Grad( gradians )
	turns    = Grad2Turn( gradians )

	degrees  = Turn2Deg( turns )
	radians  = Turn2Rad( turns )
	gradians = Turn2Grad( turns )


FixAngle180( angle )
--------------------

	declare function FixAngle180( byval angle as real ) as real

	Computes equivalent angle between -180 degrees and 180 degrees.

	Uses a simple loop to clamp the angle, so expectation is that
	the starting angle is somewhat close to the -180 to 180 range to
	begin with.

	Returns the clamped angle.


FixAngle360( angle )
--------------------

	declare function FixAngle360( byval angle as real ) as real

	Computes equivalent angle between 0 degrees and 360 degrees.

	Uses a simple loop to clamp the angle, so expectation is that
	the starting angle is somewhat close to the 0 to 360 range to
	begin with.

	Returns the clamped angle.


FixAnglePI( angle )
--------------------

	declare function FixAnglePI( byval angle as real ) as real

	Computes equivalent angle between -PI radians and PI radians.

	Uses a simple loop to clamp the angle, so expectation is that
	the starting angle is somewhat close to the -PI to PI range to
	begin with.

	Returns the clamped angle.


FixAnglePI2( angle )
--------------------

	declare function FixAnglePI2( byval angle as real ) as real

	Computes equivalent angle between 0 radians and 2*PI radians

	Uses a simple loop to clamp the angle, so expectation is that
	the starting angle is somewhat close to the 0 to 2*PI range to
	begin with.

	Returns the clamped angle.

